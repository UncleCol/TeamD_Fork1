# take in parameters from main.yml and use them to run terraform plan

parameters:
  ServiceConnectionName: ''
  backend-rg: ''
  backend-storage: ''
  backend-container: ''
  backend-key: ''
  environment: '' # For future use

jobs:
  - job: plan
    displayName: 'Terraform Plan'
    continueOnError: false

    steps:
      - task: TerraformInstaller@1
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTaskV4@4
        displayName: 'Terraform Init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          # commandOptions: '-migrate-state'
          commandOptions: '-reconfigure'
          workingDirectory: $(System.DefaultWorkingDirectory)
          backendServiceArm: $(ServiceConnectionName)
          backendAzureRmResourceGroupName: 'teamd-sa-rg'
          backendAzureRmStorageAccountName: 'teamdsa'
          backendAzureRmContainerName: 'teamdstoragecont'
          backendAzureRmKey: 'acr-terraform.tfstate'
      
      - task: TerraformTaskV4@4
        displayName: validate
        inputs:
          workingDirectory: $(System.DefaultWorkingDirectory)
          backendServiceArm: $(ServiceConnectionName)
          backendAzureRmResourceGroupName: 'teamd-sa-rg'
          backendAzureRmStorageAccountName: 'teamdsa'
          backendAzureRmContainerName: 'teamdstoragecont'
          backendAzureRmKey: 'acr-terraform.tfstate'
        continueOnError: false

      - task: TerraformTaskV4@4
        displayName: 'Set Terraform Workspace to Dev'
        inputs:
          provider: 'azurerm'
          command: 'custom'
          commandOptions: 'select -or-create dev'
          outputTo: 'console'
          customCommand: 'workspace'
          workingDirectory: $(System.DefaultWorkingDirectory)
          backendServiceArm: $(ServiceConnectionName)
          backendAzureRmResourceGroupName: 'teamd-sa-rg'
          backendAzureRmStorageAccountName: 'teamdsa'
          backendAzureRmContainerName: 'teamdstoragecont'
          backendAzureRmKey: 'acr-terraform.tfstate'


      - task: TerraformTaskV1@0
        displayName: 'Terraform Plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          var-file: '$(System.DefaultWorkingDirectory)/dev.tfvars' # TODO Change to prod for prod environment
          workingDirectory: $(System.DefaultWorkingDirectory) # TODO Future: move all tf files to own folder
          backendServiceArm: $(ServiceConnectionName)
          backendAzureRmResourceGroupName: 'teamd-sa-rg'
          backendAzureRmStorageAccountName: 'teamdsa'
          backendAzureRmContainerName: 'teamdstoragecont'
          backendAzureRmKey: 'acr-terraform.tfstate'