name: $(BuildDefinitionName)$(SourceBranchName)$(date:yyyyMMdd)

trigger: none
  # branches:
  #   include:
  #     - dev
  #     - prod

variables: #terraform variables
  ServiceConnectionName: 'NewTeamDServiceConnector'
  bk-rg-name: 'teamd-sa-rg'
  bk-strg-name: 'teamdsa'
  bk-container-name: 'teamdstoragecont'
  bk-strg-key: 'acr-terraform.tfstate'
  # TODO Move this to variables file and call it directly from plan, aply, destroy etc.

pool:
  name: cshaigh-managed-devops-pool
  vmImage: 'ubuntu-latest'

stages:
  - stage: validate_terraform
    displayName: 'Validate Terraform'

    jobs:
    - job: plan
      displayName: 'Terraform Plan'
      continueOnError: false

      steps:
        - task: TerraformInstaller@1
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: 'latest'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Init'
          inputs:
            provider: 'azurerm'
            command: 'init'
            # commandOptions: '-migrate-state'
            # commandOptions: '-reconfigure'
            workingDirectory: $(System.DefaultWorkingDirectory)
            backendServiceArm: $(ServiceConnectionName)
            backendAzureRmResourceGroupName: 'teamd-sa-rg'
            backendAzureRmStorageAccountName: 'teamdsa'
            backendAzureRmContainerName: 'teamdstoragecont'
            backendAzureRmKey: 'acr-terraform.tfstate'
            
        
        - task: TerraformTaskV4@4
          displayName: validate
          inputs:
            provider: 'azurerm'
            command: 'validate'

          continueOnError: false

        - task: TerraformTaskV4@4
          displayName: 'Set Terraform Workspace to Dev'
          inputs:
            provider: 'azurerm'
            command: 'custom'
            commandOptions: 'select -or-create dev'
            outputTo: 'console'
            customCommand: 'workspace'
            workingDirectory: $(System.DefaultWorkingDirectory)
            environmentServiceNameAzureRM: $(ServiceConnectionName)


        - task: TerraformTaskV1@0
          displayName: 'Terraform Plan'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '-var-file="dev.tfvars"' # TODO Change to prod for prod environment
            workingDirectory: $(System.DefaultWorkingDirectory) # TODO Future: move all tf files to own folder
            environmentServiceNameAzureRM: $(ServiceConnectionName)