# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'teamd-sa-rg'
  bkstrg: 'teamdsa'
  bkcontainer: 'teamstoragecont'  #'tfstate'
  bkstrgkey: 'acr-terraform.tfstate'

stages:
  - stage: tfdestroy
    jobs:
      - job: destroy
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'TeamDDevServiceConn'
              backendAzureRmResourceGroupName: 'teamd-sa-rg'
              backendAzureRmStorageAccountName: 'teamdsa'
              backendAzureRmContainerName: 'teamdstoragecont'
              backendAzureRmKey: 'acr-terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'TeamDDevServiceConn'
          - task: TerraformTaskV4@4
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: 'TeamDDevServiceConn'
